{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","prevPage","nextPage","useState","isPrevDisabled","setPrevDisability","isNextDisabled","setNextDisability","current","last","Math","ceil","visiblePages","useMemo","currentPage","lastPage","result","i","max","min","push","unshift","map","value","id","uuidv4","paginate","useEffect","length","className","type","onClick","disabled","item","style","backgroundColor","defaultProps","App","setCurrentPage","setPerPage","index","prevIndex","method","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6670a9c6.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage?: number;\n  page?: number;\n  onPageChange: (index: number) => void;\n  prevPage: () => void;\n  nextPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage = 5,\n  page = 1,\n  onPageChange,\n  prevPage,\n  nextPage,\n}) => {\n  const [isPrevDisabled, setPrevDisability] = useState(true);\n  const [isNextDisabled, setNextDisability] = useState(false);\n  const current = page;\n  const last = Math.ceil(total / perPage);\n\n  const paginate = (currentPage: number, lastPage: number) => {\n    const delta = 1;\n    const result = [];\n\n    for (\n      let i = Math.max(2, (currentPage - delta));\n      i <= Math.min((lastPage - 1), (currentPage + delta));\n      i += 1\n    ) {\n      result.push(i);\n    }\n\n    if ((currentPage - delta) > 2) {\n      result.unshift('...');\n    }\n\n    if ((currentPage + delta) < (lastPage - 1)) {\n      result.push('...');\n    }\n\n    result.unshift(1);\n    if (lastPage !== 1) {\n      result.push(lastPage);\n    }\n\n    return result.map(value => ({\n      value,\n      id: uuidv4(),\n    }));\n  };\n\n  const visiblePages = useMemo(() => {\n    return paginate(current, last);\n  }, [page, total]);\n\n  useEffect(() => {\n    if (page === visiblePages[visiblePages.length - 1].value) {\n      setNextDisability(true);\n    } else {\n      setNextDisability(false);\n    }\n\n    if (page > 1) {\n      setPrevDisability(false);\n    } else {\n      setPrevDisability(true);\n    }\n  }, [page]);\n\n  return (\n    <div className=\"pagination\">\n      <p className=\"pagination__title\">\n        {`${1 + perPage * (page - 1)} - ${perPage * page > total ? `${total}` : `${perPage * page}`} of ${total}`}\n      </p>\n\n      <div className=\"pagination__buttons\">\n        <button\n          type=\"button\"\n          onClick={prevPage}\n          disabled={isPrevDisabled}\n          className=\"pagination__button\"\n        >\n          &laquo;\n        </button>\n\n        <div className=\"pagination__buttons-pages\">\n          {visiblePages.map(item => {\n            if (item.value === '...') {\n              return (\n                <p\n                  key={item.id}\n                  className=\"pagination__buttons-dots\"\n                >\n                  {item.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                key={item.id}\n                type=\"button\"\n                style={page === item.value\n                  ? { backgroundColor: '#ff784f' }\n                  : {}}\n                onClick={() => onPageChange(+item.value)}\n                className=\"pagination__button\"\n              >\n                {item.value}\n              </button>\n            );\n          })}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={nextPage}\n          disabled={isNextDisabled}\n          className=\"pagination__button\"\n        >\n          &raquo;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Pagination } from './components/Pagination';\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (index: number) => {\n    setCurrentPage(index);\n  };\n\n  const prevPage = () => {\n    setCurrentPage((prevIndex) => (prevIndex - 1));\n  };\n\n  const nextPage = () => {\n    setCurrentPage((prevIndex) => (prevIndex + 1));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">\n        Pagination\n      </h1>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        page={currentPage}\n        onPageChange={onPageChange}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n\n      <form method=\"get\">\n        <label className=\"app__label\">\n          Items on the page:\n          <select\n            value={perPage}\n            onChange={({ target }) => {\n              setPerPage(+target.value);\n              setCurrentPage(1);\n            }}\n            className=\"app__select\"\n          >\n            <option value=\"3\">\n              3\n            </option>\n\n            <option value=\"5\">\n              5\n            </option>\n\n            <option value=\"10\">\n              10\n            </option>\n\n            <option value=\"20\">\n              20\n            </option>\n          </select>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}